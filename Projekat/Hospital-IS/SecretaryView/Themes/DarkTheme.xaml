<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="Button" x:Key="RegularButton">
        <Setter Property="TextElement.FontFamily" Value="Tahoma"/>
        <Setter Property="Background" Value="#265077"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="30" CornerRadius="12"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF1A3E6E"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#5C7C99"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="SecondaryButton">
        <Setter Property="TextElement.FontFamily" Value="Tahoma"/>
        <Setter Property="Background" Value="#275351"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="25" CornerRadius="8"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#224746"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="MainMenuButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="White"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF1A3E6E"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="SearchButton">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="#265077"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF1A3E6E"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid" x:Key="MainMenuGrid">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#022140" Offset="0.0"/>
                    <GradientStop Color="#1e4258" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Rectangle" x:Key="StatusBar">
        <Setter Property="Fill" Value="#494b68"/>
    </Style>

    <Style TargetType="Border" x:Key="SecretaryMainWindowBorder">
        <Setter Property="Background" Value="#022140"/>
    </Style>

    <Style TargetType="DataGrid" x:Key="DataGrid">
        <Setter Property="Background" Value="#494b68"/>
    </Style>

    <Style TargetType="DataGridColumnHeader" x:Key="ColumHeader">
        <Setter Property="Background" Value="#265077"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextElement.FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SeparatorVisibility" Value="Visible"/>
    </Style>

    <Style TargetType="DataGridRow" x:Key="GridRow">
        <Setter Property="Background" Value="#93A8BB"/>
    </Style>

    <Style TargetType="Button" x:Key="NotificationButton">
        <Setter Property="TextElement.FontFamily" Value="Tahoma"/>
        <Setter Property="Background" Value="#265077"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="20" Width="80" CornerRadius="5"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF1A3E6E"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ScrollViewer" x:Key="NotificationViewer">
        <Setter Property="Background" Value="#494b68"/>
    </Style>

    <Style TargetType="Border" x:Key="NotificationBorder">
        <Setter Property="Background" Value="#93A8BB"/>
    </Style>
    

    <Style TargetType="Grid" x:Key="WindowGrid">
        <Setter Property="Background" Value="#022140"/>
    </Style>

    <Style TargetType="TextBox" x:Key="RegularTextBox">
        <Setter Property="Background" Value="#AEBDCC"/>
    </Style>

    <Style TargetType="Label" x:Key="Label">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="RegularTextBlock">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="RadioButton" x:Key="RadioButton">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--<Style TargetType="ComboBox">
        <Setter Property="Background" Value="#AEBDCC"/>
        <Setter Property="BorderBrush" Value="#AEBDCC"/>
        <Setter Property="Foreground" Value="Black"/>
        
    </Style>-->

    <!--<Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#AEBDCC"/>
        <Setter Property="BorderBrush" Value="#AEBDCC"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>-->

    <Style TargetType="PasswordBox" x:Key="PasswordBox">
        <Setter Property="Background" Value="#AEBDCC"/>
    </Style>


    <Style TargetType="TabControl" x:Key="TabControl">
        <Setter Property="Background" Value="#022140"/>
        <Setter Property="BorderBrush" Value="#265077"/>
    </Style>

    <Style TargetType="TabItem" x:Key="TabItem">
        <Setter Property="Background" Value="#AEBDCC"/>
        
    </Style>

    <Style TargetType="ListBox" x:Key="ListBox">
        <Setter Property="Background" Value="#494b68"/>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="ListBoxItem">
        <Setter Property="Background" Value="#93A8BB"/>
    </Style>

    <Style TargetType="Button" x:Key="LogoutButton">
        <Setter Property="TextElement.FontFamily" Value="Tahoma"/>
        <Setter Property="Background" Value="#4D2677"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="30" CornerRadius="12"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#432168"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="StackPanel" x:Key="AppointmentFilterStackPanel">
        <Setter Property="Background" Value="#5C7C99"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="Validation">
        <Setter Property="Foreground" Value="#EC7D8E"/>
    </Style>

    <Style TargetType="Button" x:Key="DeleteButton">
        <Setter Property="TextElement.FontFamily" Value="Tahoma"/>
        <Setter Property="Background" Value="#772627"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="25" CornerRadius="8"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#591D1D"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="ButtonX">
        <Setter Property="TextElement.FontFamily" Value="Tahoma"/>
        <Setter Property="Background" Value="#426967"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="17" Width="17" CornerRadius="120"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#224746"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="CheckBox" x:Key="CheckBox">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  
                                      Width="13" 
                                      Height="13" 
                                      CornerRadius="0" 
                                      Background="#AEBDCC"
                                      BorderThickness="1"
                                      BorderBrush="#404040">
                                <Path 
                                        Width="7" Height="7" 
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False" 
                                        Stroke="#404040"
                                        StrokeThickness="2"
                                        Data="M 0 0 L 7 7 M 0 7 L 7 0" />       
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True"/>    
                         </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#808080" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>